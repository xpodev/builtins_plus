# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  
jobs:
  linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build git+https://github.com/binyamin555/cibuildwheel
    - name: Build package
      # if: github.event.inputs.build == 'true'
      # run: python -m build --wheel --sdist --outdir dist/
      env:
        CIBW_PROJECT_REQUIRES_PYTHON: ==${{ matrix.python-version }}.*
      run: python -m cibuildwheel --output-dir dist/
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-linux
        path: dist/*.whl

  windows:
    name: Build for Windows

    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - name: Build package
      run: python -m build
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-win
        path: dist/*.whl

  macos:
    name: Build for Mac

    runs-on: macos-11
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-mac
        path: dist/*.whl

  upload:
    name: Upload Wheels
    needs: ["linux", "windows", "macos"]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts for Linux
      uses: actions/download-artifact@v3
      with:
        name: build-linux
        path: dist/
    - name: Download Artifacts for Windows
      uses: actions/download-artifact@v3
      with:
        name: build-win
        path: dist/
    - name: Download Artifacts for Mac
      uses: actions/download-artifact@v3
      with:
        name: build-mac
        path: dist/
    - name: Dist Directory Tree
      run: ls dist/ -R
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.8.3
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
